
@*............................,,,,,,,,,,,,,,,,,,,,,,,,,,............................... , *@
@model ProductListViewModel
@{
    ViewData["Title"] = "Index";
}

@using VogueCore.Entities.Identity
@inject SignInManager<AppUser> SignInManager

<h1 style="text-align: center">All Products</h1>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <a asp-action="Create" class="btn btn-outline-primary m-3">Add New Product</a>
}


@if (Model.Products.Count > 0)
{
    <div style="margin-left: 15px; margin-right: 15px">
        <table class="table table-hover table-striped table-bordered dt-responsive nowrap">
            <thead class="bg-dark text-white text-center">
                <tr>
                    <th>Picture</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Brand</th>
                    <th>Type</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var Product in Model.Products)
                {
                    <tr>
                        <td>
                            <img class="w-25" src="~/@Product.PictureUrl?v=@DateTime.Now.Ticks" />
                        </td>
                        <td>@Product.Name</td>
                        <td>@Product.Description</td>
                        <td>@Product.Price</td>
                        <td>@Product.ProductBrand.Name</td>
                        <td>@Product.ProductType.Name</td>
                        <td>
                            <div class="d-flex">
                                <a class="btn mb-2 text-warning" asp-action="Edit" asp-route-id="@Product.Id"><i class="fas fa-pen"></i></a>
                                <a class="btn text-danger" asp-action="Delete" asp-route-id="@Product.Id"><i class="fas fa-trash"></i></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination Controls -->
        <nav>
            <ul class="pagination">
                @if (Model.PageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="Model.PageSize">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageIndex="@i" asp-route-pageSize="Model.PageSize">@i</a>
                    </li>
                }

                @if (Model.PageIndex < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="Model.PageSize">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
else
{
    <div class="mt-3 p-3 alert-warning">
        <h2>There are no Products!</h2>
    </div>
}

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}
